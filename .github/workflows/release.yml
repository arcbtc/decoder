on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub release
        env:
          GH_TOKEN: ${{ github.token }}       # built-in token for this repo
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" --generate-notes || \
          gh release view "$TAG" >/dev/null

  pullrequest:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.EXT_GITHUB }}    # PAT with write to lnbits/lnbits-extensions
          repository: lnbits/lnbits-extensions
          path: lnbits-extensions
          fetch-depth: 0

      - name: Setup git user
        run: |
          git config --global user.name "alan"
          git config --global user.email "alan@lnbits.com"

      - name: Create or update PR in lnbits-extensions
        env:
          GH_TOKEN: ${{ secrets.EXT_GITHUB }}
          REPO_NAME: ${{ github.event.repository.name }}
          REPO_SLUG: ${{ github.repository }}   # e.g. yourname/decoder
          TAG: ${{ github.ref_name }}
          BRANCH: update-${{ github.event.repository.name }}-${{ github.ref_name }}
          TITLE: "[UPDATE] ${{ github.event.repository.name }} to ${{ github.ref_name }}"
          BODY: "https://github.com/${{ github.repository }}/releases/${{ github.ref_name }}"
          ARCHIVE: "https://github.com/${{ github.repository }}/archive/refs/tags/${{ github.ref_name }}.zip"
        run: |
          set -euo pipefail
          cd lnbits-extensions

          # create/update branch
          git checkout -B "$BRANCH"

          # run your updater (should consume $REPO_NAME, $TAG, maybe $ARCHIVE)
          sh util.sh update_extension "$REPO_NAME" "$TAG"

          git add -A
          git commit -m "$TITLE" || echo "Nothing to commit"
          git push --set-upstream origin "$BRANCH"

          # create PR if it doesn't already exist
          gh config set pager cat
          if [ "$(gh pr list -H "$BRANCH" --state open | wc -l)" -eq 0 ]; then
            gh pr create --title "$TITLE" --body "$BODY" --repo lnbits/lnbits-extensions
          else
            echo "PR already exists"
          fi
